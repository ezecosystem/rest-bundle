<html>
    <head>
        <title>Angular 2 TypeScript Gulp QuickStart</title>
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <!-- script>document.write('<base href="' + document.location + '" />');</script -->
        <base href="/angular/v1" />

        <link href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.3.6/css/bootstrap.min.css" rel="stylesheet">

        <!-- 1. Load libraries -->
        <!-- IE required polyfills, in this exact order -->
        <script src="https://cdnjs.cloudflare.com/ajax/libs/es6-shim/0.35.0/es6-shim.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/systemjs/0.19.20/system-polyfills.js"></script>
        <script src="https://npmcdn.com/angular2@2.0.0-beta.13/es6/dev/src/testing/shims_for_IE.js"></script>

        <script src="https://code.angularjs.org/2.0.0-beta.13/angular2-polyfills.js"></script>
        <script src="https://code.angularjs.org/tools/system.js"></script>
        <script src="https://npmcdn.com/typescript@1.8.9/lib/typescript.js"></script>
        <script src="https://code.angularjs.org/2.0.0-beta.13/Rx.js"></script>
        <script src="https://code.angularjs.org/2.0.0-beta.13/angular2.dev.js"></script>
        <script src="https://code.angularjs.org/2.0.0-beta.13/http.dev.js"></script>

        <!-- Add the router library -->
        <script src="https://code.angularjs.org/2.0.0-beta.13/router.dev.js"></script>

        <!-- 1. Load libraries -->
        <!-- IE required polyfills, in this exact order -->
        <!-- script src="{{ asset('bundles/xrowrest/js/angular/oauth2/build/lib/es6-shim/es6-shim.min.js') }}"></script-->
        <!-- script src="{{ asset('bundles/xrowrest/js/angular/oauth2/build/lib/systemjs/dist/system-polyfills.js') }}"></script-->
        <!-- script src="{{ asset('bundles/xrowrest/js/angular/oauth2/build/lib/angular2/es6/dev/src/testing/shims_for_IE.js') }}"></script-->

        <!-- script src="{{ asset('bundles/xrowrest/js/angular/oauth2/build/lib/angular2/bundles/angular2-polyfills.js') }}"></script-->
        <!-- script src="{{ asset('bundles/xrowrest/js/angular/oauth2/build/lib/systemjs/dist/system.src.js') }}"></script-->
        <!-- script src="{{ asset('bundles/xrowrest/js/angular/oauth2/build/lib/rxjs/bundles/Rx.js') }}"></script-->
        <!-- script src="{{ asset('bundles/xrowrest/js/angular/oauth2/build/lib/angular2/bundles/angular2.js') }}"></script-->

        <script type='text/javascript'>
            var lsKeyName = 'xrowOpenIDConnect',
                oauthSettings = {"client_id": "{{oa_params.clid}}",
                                 "client_secret": "{{oa_params.clsc}}",
                                 "baseURL": "{{oa_params.clba}}",
                                 "endpointPrefix": "{{oa_params.endpoint_rest}}",
                                 "tokenURL": "{{oa_params.endpoint_token}}/token",
                                 "authURL": "{{oa_params.endpoint_rest}}/auth",
                                 "openIDConnectURL": "{{oa_params.endpoint_rest}}/oicauth",
                                 "apiSessionURL": "{{oa_params.endpoint_rest}}/session",
                                 "apiLogoutURL": "{{oa_params.endpoint_rest}}/sessions",
                                 "setcookieURL": "{{oa_params.endpoint_rest}}/setcookie",
                                 "checkSessionIframeURL": "{{oa_params.endpoint_rest}}/check_session_iframe"},
                checkSessionDuration = 10,
                snDomains = new Array(),
                snCounter = 0;
            {% if oa_params.checkSessionDuration is defined %}
            checkSessionDuration = {{oa_params.checkSessionDuration}};
            {% endif %}
            {# Get all allowed domains for sharing the session cookie #}
            {% if oa_params.oicdomains is defined and oa_params.clba != app.request.schemeAndHttpHost %}
            {% set oicdomains = oa_params.oicdomains|split(',') %}
            {% for OpenIDConnectDomain in oicdomains %}
            {% if app.request.schemeAndHttpHost != OpenIDConnectDomain|trim %}
            snDomains[snCounter] = '{{OpenIDConnectDomain|trim}}';
            snCounter++;
            {% endif %}
            {% endfor %}
            {% endif %}

            {% if oa_params.callback_function_if_token_is_set is defined %}
            var callbackFunctionIfToken = '{{oa_params.callback_function_if_token_is_set}}';
            {% endif %}
            {% if oa_params.callback_function_if_restLogin_fail is defined %}
            var callbackRestLoginFormErrorHandling = '{{oa_params.callback_function_if_restLogin_fail}}';
            {% endif %}
        </script>

        <!-- 2. Configure SystemJS -->
        <script>
            System.config({
                packages: {
                    /* NOT NECESSARY ANYMORE
                    'ng2-jwt':           {main: '../../../bundles/xrowrest/js/angular/openIDConnect/build/lib/ng2-jwt/src/services/ng2-jwt.js'},
                    'jwt-decode':        {main: '../../../bundles/xrowrest/js/angular/openIDConnect/build/lib/jwt-decode/build/jwt-decode.js'},*/
                    'app/main':                    {main: '../../../../bundles/xrowrest/js/angular/openIDConnect/build/src/app/main.js'},
                    'app/app.component':           {main: '../../../../bundles/xrowrest/js/angular/openIDConnect/build/src/app/app.component.js'},
                    'app/http.service':            {main: '../../../../bundles/xrowrest/js/angular/openIDConnect/build/src/app/http.service.js'},
                    'app/jwt.service':             {main: '../../../../bundles/xrowrest/js/angular/openIDConnect/build/src/app/jwt.service.js'},
                    'app/cast.response.to.object': {main: '../../../../bundles/xrowrest/js/angular/openIDConnect/build/src/app/cast.response.to.object.js'},
                    'login/login':                 {main: '../../../../bundles/xrowrest/js/angular/openIDConnect/build/src/login/login.js'}
                }
            });

            System.import('app/main')
                .then(null, console.error.bind(console));
        </script>
    </head>
    <!-- 3. Display the application -->
    <body>
        <app>Loading...</app>
    </body>
</html>