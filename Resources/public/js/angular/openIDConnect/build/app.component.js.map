{"version":3,"sources":["app.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAsBA;gBASI,sBAAoB,YAAyB,EAAU,WAAuB;oBAA1D,iBAAY,GAAZ,YAAY,CAAa;oBAAU,gBAAW,GAAX,WAAW,CAAY;oBAC1E,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;oBAC1B,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;oBAC3B,IAAI,CAAC,cAAc,GAAG,2DAA2D,CAAC;gBACtF,CAAC;gBAED,+BAAQ,GAAR;oBAAA,iBAkCC;oBAjCG,OAAO,CAAC,GAAG,CAAC,uCAAuC,CAAC,CAAC;oBACrD,cAAc;oBACd,IAAI,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC;oBACrC,EAAE,CAAC,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC;wBACnB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;wBACzB,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,OAAO,CAAC,YAAY,CAAC;6BAC9C,SAAS,CACN,UAAA,QAAQ;4BACJ,EAAE,CAAC,CAAC,OAAO,KAAI,CAAC,YAAY,CAAC,YAAY,IAAI,WAAW,CAAC,CAAC,CAAC;gCACvD,IAAI,UAAU,GAAG,IAAI,+CAAqB,CAAC,KAAI,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;gCAC3E,EAAE,CAAC,CAAC,UAAU,CAAC,MAAM,KAAK,WAAW,CAAC,CAAC,CAAC;oCACpC,KAAI,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;gCAClC,CAAC;gCACD,IAAI,CAAC,CAAC;oCACF,KAAI,CAAC,QAAQ,GAAG,UAAU,CAAC,MAAM,CAAC;gCACtC,CAAC;4BACL,CAAC;4BACD,EAAE,CAAC,CAAC,OAAO,KAAI,CAAC,YAAY,CAAC,eAAe,IAAI,WAAW,CAAC,CAAC,CAAC;gCAC1D,IAAI,aAAa,GAAG,IAAI,+CAAqB,CAAC,KAAI,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC;gCACjF,EAAE,CAAC,CAAC,aAAa,CAAC,MAAM,KAAK,WAAW,CAAC,CAAC,CAAC;oCACvC,KAAI,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC;gCACrC,CAAC;gCACD,IAAI,CAAC,CAAC;oCACF,KAAI,CAAC,WAAW,GAAG,aAAa,CAAC,MAAM,CAAC;gCAC5C,CAAC;4BACL,CAAC;wBACL,CAAC,EACD,UAAA,aAAa;4BACT,KAAI,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC;wBACrC,CAAC,CACJ,CAAC;oBAEV,CAAC;gBACL,CAAC;gBAED,4BAAK,GAAL,UAAM,KAAK,EAAE,QAAQ,EAAE,QAAQ;oBAA/B,iBAsBC;oBArBG,KAAK,CAAC,cAAc,EAAE,CAAC;oBACvB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;oBAC3B,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;oBACpB,EAAE,CAAC,CAAC,QAAQ,IAAI,EAAE,IAAI,QAAQ,IAAI,EAAE,CAAC,CAAC,CAAC;wBACnC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC;wBACrC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;oBAC9B,CAAC;oBACD,IAAI,CAAC,CAAC;wBACF,IAAI,gBAAgB,GAAG,gCAAgC,GAAC,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,SAAS,GAAC,iBAAiB,GAAC,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,aAAa,GAAC,YAAY,GAAC,QAAQ,GAAC,YAAY,GAAC,QAAQ,CAAC;wBAChN,IAAI,CAAC,YAAY,CAAC,KAAK;6BAClB,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,OAAO,GAAC,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,QAAQ,EAAE,gBAAgB,EAAE,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC;6BAC5I,SAAS,CACN,UAAA,aAAa;4BACT,KAAI,CAAC,YAAY,CAAC,YAAY,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC,CAAC;wBACzD,CAAC,EACD,UAAA,kBAAkB;4BACd,IAAI,mBAAmB,GAAG,IAAI,+CAAqB,CAAC,kBAAkB,CAAC,CAAC;4BACxE,KAAI,CAAC,YAAY,CAAC,mBAAmB,CAAC,CAAC;wBAC3C,CAAC,CACJ,CAAC;oBACV,CAAC;gBACL,CAAC;gBAED,6BAAM,GAAN,UAAO,KAAK;oBACR,KAAK,CAAC,cAAc,EAAE,CAAC;oBACvB,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC;gBAC/B,CAAC;gBAED,mCAAY,GAAZ,UAAa,aAAa;oBACtB,IAAI,SAAS,GAAG,aAAa,CAAC,IAAI,EAAE,CAAC;oBACrC,IAAI,WAAW,GAAG,aAAa,CAAC,MAAM,CAAC;oBACvC,IAAI,KAAK,GAAG,IAAI,+CAAqB,CAAC,SAAS,CAAC,CAAC;oBAEjD,mBAAmB;oBACnB,EAAE,CAAC,CAAC,WAAW,IAAI,GAAG,CAAC,CAAC,CAAC;wBACrB,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC;oBAC5C,CAAC;oBACD,IAAI,CAAC,CAAC;wBACF,EAAE,CAAC,CAAC,KAAK,CAAC,iBAAiB,IAAI,WAAW,CAAC,CAAC,CAAC;4BACzC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,iBAAiB,CAAC;4BACzC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;wBAC9B,CAAC;wBACD,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,KAAK,IAAI,WAAW,CAAC,CAAC,CAAC;4BAClC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,KAAK,CAAC;4BAC7B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;wBAC9B,CAAC;oBACL,CAAC;gBACL,CAAC;gBA/GL;oBAAC,iBAAU,EAAE;oBACZ,gBAAS,CAAC;wBACP,QAAQ,EAAE,KAAK;wBACf,WAAW,EAAE,2DAA2D;wBACxE,UAAU,EAAE,CAAC,wBAAe,EAAE,wBAAe,CAAC;wBAC9C,SAAS,EAAE;4BACP,qBAAc;4BACd,0BAAW;4BACX,wBAAU;yBACb;qBACJ,CAAC;;gCAAA;gBAsGF,mBAAC;YAAD,CApGA,AAoGC,IAAA;YApGD,uCAoGC,CAAA","file":"app.component.js","sourcesContent":["import {Component, Injectable, OnInit, Input} from \"angular2/core\";\nimport {HTTP_PROVIDERS}                       from \"angular2/http\";\nimport {CORE_DIRECTIVES, FORM_DIRECTIVES}     from \"angular2/common\";\nimport {Observable}                           from \"rxjs/Observable\";\nimport 'rxjs/Rx';\n\nimport {HttpService}                          from \"http.service\";\nimport {JwtService}                           from \"jwt.service\";\nimport {CastResponseToOobject}                from \"cast.response.to.object\";\n\n@Injectable()\n@Component({\n    selector: \"app\",\n    templateUrl: \"/bundles/xrowrest/js/angular/openIDConnect/build/app.html\",\n    directives: [CORE_DIRECTIVES, FORM_DIRECTIVES],\n    providers: [\n        HTTP_PROVIDERS,\n        HttpService,\n        JwtService\n    ]\n})\n\nexport class AppComponent implements OnInit{\n\n    userData;\n    accountData;\n    showUserData: Boolean;\n    errorText: string;\n    showErrorText: Boolean;\n    loginDataEmpty: string;\n\n    constructor(private _httpService: HttpService, private _jwtService: JwtService) {\n        this.showUserData = false;\n        this.showErrorText = false;\n        this.loginDataEmpty = 'Bitte geben Sie Ihren Benutzernamen und Ihr Passwort ein.';\n    }\n\n    ngOnInit() {\n        console.log(\"Application component initialized ...\");\n        // Get the JWT\n        let jwToken = this._jwtService.get();\n        if (jwToken !== null) {\n            this.showUserData = true;\n            this._httpService.getUserData(jwToken.access_token)\n                .subscribe(\n                    response => {\n                        if (typeof this._httpService.responseUser != \"undefined\") {\n                            let castedUser = new CastResponseToOobject(this._httpService.responseUser);\n                            if (castedUser.result === \"undefined\") {\n                                this.handleErrors(castedUser);\n                            }\n                            else {\n                                this.userData = castedUser.result;\n                            }\n                        }\n                        if (typeof this._httpService.responseAccount != \"undefined\") {\n                            let castedAccount = new CastResponseToOobject(this._httpService.responseAccount);\n                            if (castedAccount.result === \"undefined\") {\n                                this.handleErrors(castedAccount);\n                            }\n                            else {\n                                this.accountData = castedAccount.result;\n                            }\n                        }\n                    },\n                    errorResponse => {\n                        this.handleErrors(errorResponse);\n                    }\n                );\n            //this.jwtService.checkSessionIframe(jwToken);\n        }\n    }\n\n    login(event, username, password) {\n        event.preventDefault();\n        this.showErrorText = false;\n        this.errorText = '';\n        if (username == '' || password == '') {\n            this.errorText = this.loginDataEmpty;\n            this.showErrorText = true;\n        }\n        else {\n            let loginRequestData = \"grant_type=password&client_id=\"+this._httpService._oauthSettings.client_id+\"&client_secret=\"+this._httpService._oauthSettings.client_secret+\"&username=\"+username+\"&password=\"+password;\n            this._httpService._http\n                .post(this._httpService._oauthSettings.baseURL+this._httpService._oauthSettings.tokenURL, loginRequestData, this._httpService._headerOptions)\n                .subscribe(\n                    loginResponse => {\n                        this._httpService.authenticate(loginResponse.json());\n                    },\n                    errorLoginResponse => {\n                        let castedLoginResponse = new CastResponseToOobject(errorLoginResponse);\n                        this.handleErrors(castedLoginResponse);\n                    }\n                );\n        }\n    }\n\n    logout(event) {\n        event.preventDefault();\n        this._httpService.logout();\n    }\n\n    handleErrors(errorResponse) {\n        let errorJson = errorResponse.json();\n        let errorStatus = errorResponse.status;\n        let error = new CastResponseToOobject(errorJson);\n\n        // Token is expired\n        if (errorStatus == 401) {\n            return this._httpService.refreshToken();\n        }\n        else {\n            if (error.error_description != 'undefined') {\n                this.errorText = error.error_description;\n                this.showErrorText = true;\n            }\n            else if (error.error != 'undefined') {\n                this.errorText = error.error;\n                this.showErrorText = true;\n            }\n        }\n    }\n}"],"sourceRoot":"/source/"}