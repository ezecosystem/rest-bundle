{"version":3,"sources":["jwt.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;YAGA;gBAII;oBAFO,aAAQ,GAAG,SAAS,CAAC;gBAEZ,CAAC;gBAEjB,wBAAG,GAAH;oBACI,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;oBAC5D,MAAM,CAAC,KAAK,CAAC;gBACjB,CAAC;gBAED,wBAAG,GAAH,UAAI,KAAK;oBACL,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;oBAC3D,MAAM,CAAC,IAAI,CAAC;gBAChB,CAAC;gBAED,2BAAM,GAAN;oBACI,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;oBACvC,MAAM,CAAC,IAAI,CAAC;gBAChB,CAAC;gBApBL;oBAAC,iBAAU,EAAE;;8BAAA;gBAqBb,iBAAC;YAAD,CApBA,AAoBC,IAAA;YApBD,mCAoBC,CAAA","file":"jwt.service.js","sourcesContent":["import {Injectable} from \"angular2/core\";\n\n@Injectable()\nexport class JwtService {\n\n    public provider = \"xrowapi\";\n\n    constructor () {}\n\n    get() {\n        var token = JSON.parse(localStorage.getItem(this.provider));\n        return token;\n    }\n\n    set(token) {\n        localStorage.setItem(this.provider, JSON.stringify(token));\n        return true;\n    }\n\n    remove() {\n        localStorage.removeItem(this.provider);\n        return true;\n    }\n}"],"sourceRoot":"/source/"}